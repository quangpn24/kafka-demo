{
  "connector.class": "io.debezium.connector.mysql.MySqlConnector",
  "tasks.max": "1",
  "topic.prefix": "cdc",
  "database.hostname": "mysql",
  "database.port": "3306",
  "database.user": "root",
  "database.password":"123456",
  "database.server.id": "184054",
  "database.include.list": "test-kafka-connect",
  "table.include.list": "test-kafka-connect.users, test-kafka-connect.tasks",
  "schema.history.internal.kafka.bootstrap.servers": "kafka:29092",
  "schema.history.internal.kafka.topic": "schemahistory.debezium_connector",
  "key.converter": "io.confluent.connect.avro.AvroConverter",
  "value.converter": "io.confluent.connect.avro.AvroConverter",
  "key.converter.schema.registry.url": "http://schema-registry:8081",
  "value.converter.schema.registry.url": "http://schema-registry:8081",
  "key.converter.schemas.enable": "true",
  "value.converter.schemas.enable": "true",
  "message.key.columns": "test-kafka-connect.users:id; test-kafka-connect.tasks:user_id",
  "column.exclude.list": "test-kafka-connect.users.id, test-kafka-connect.users.created_at, test-kafka-connect.users.updated_at, test-kafka-connect.tasks.user_id",


  "transforms": "ExtractKeyForTask, HoistFieldForTask,Reroute",

  "predicates": "isTaskTable",
  "predicates.isTaskTable.type": "org.apache.kafka.connect.transforms.predicates.TopicNameMatches",
  "predicates.isTaskTable.pattern": "cdc\\.test-kafka-connect\\.tasks",


  "transforms.ExtractKeyForTask.type": "org.apache.kafka.connect.transforms.ExtractField$Key",
  "transforms.ExtractKeyForTask.field": "user_id",
  "transforms.ExtractKeyForTask.predicate": "isTaskTable",

  "transforms.HoistFieldForTask.type": "org.apache.kafka.connect.transforms.HoistField$Key",
  "transforms.HoistFieldForTask.field": "id",
  "transforms.HoistFieldForTask.predicate": "isTaskTable",

  "transforms.Reroute.type": "io.debezium.transforms.ByLogicalTableRouter",
  "transforms.Reroute.topic.regex":"cdc.test-kafka-connect.(.*)",
  "transforms.Reroute.topic.replacement": "cdc.search.task-with-user-info",
  "transforms.Reroute.key.field.name": "id",
  "transforms.Reroute.key.enforce.uniqueness": "false"
}